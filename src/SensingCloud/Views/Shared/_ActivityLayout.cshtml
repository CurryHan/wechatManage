@model ActivityNavigationModel
@using SensingCloud.Helpers
@using SensingCloud.Models
@{
    string CurrentHost = Request.Url.Scheme + "://" + Request.Url.Host + "/weixin/Auth20CallBack";
    CurrentHost = System.Web.HttpUtility.UrlEncode(CurrentHost);
    WeChatJSViewModel weChatJSInfo = ViewBag.WXJSInfo as WeChatJSViewModel;

    var flow = Model.Activity.ActivityFlows.FirstOrDefault(p => p.FlowType == (Sensing.Entities.Weixin.FlowType)Model.FlowType && p.Deleted == false);
}


@functions{

    public int GetShareCount()
    {
        if (Model.Activity.WeixinShares == null)
            return 0;
        else
            return Model.Activity.WeixinShares.Count;
    }

    public string GetCurrentDate()
    {
        if (Model.LastUpdated == null)
            return DateTime.Now.ToString("yyyy年MM月dd日");
        else
            return Model.LastUpdated.Value.ToString("yyyy年MM月dd日");
    }

    public string GetLogo()
    {
        if (string.IsNullOrEmpty(Model.Activity.Group.LogoUrl))
            return "/Content/weixinImage/photoshare/logo.png";
        else
            return Model.Activity.Group.LogoUrl;
    }

    public string GetShareImage()
    {
        string activityShareImage = "";
        activityShareImage = Model.Activity.ActivityShare.ImageLink;
        if (string.IsNullOrEmpty(activityShareImage))
        {
            activityShareImage = ConstConfig.Common_Share_Image;
        }
        if (!string.IsNullOrEmpty(activityShareImage) && !activityShareImage.StartsWith("http"))
        {
            activityShareImage = Request.Url.Scheme + "://" + Request.Url.Host + activityShareImage.Replace("\\", "/");
        }
        return activityShareImage;
    }

    public string GetOpenDate()
    {
        if (Model.Activity != null)
        {
            return Model.Activity.ActivityExcutedDate.ToString("yyyy.MM.dd");
        }
        else
        {
            return DateTime.Now.ToString("yyyy.MM.dd");
        }
    }
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta charset="utf-8" />
    <title>@ViewBag.Title </title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0" />

    <!-- bootstrap & fontawesome -->
    <!-- page specific plugin styles -->
    <!-- text fonts -->
    <!--[if lte IE 9]>
    <link rel="stylesheet" href="~/Content/ace/css/ace-part2.min.css" class="ace-main-stylesheet" />
    <![endif]-->
    <!--[if lte IE 9]>
    <link rel="stylesheet" href="~/Content/ace/css/ace-ie.min.css" />
    <![endif]-->
    <!-- HTML5shiv and Respond.js for IE8 to support HTML5 elements and media queries -->
    <!--[if lte IE 8]>
        <script src="~/Content/ace/js/html5shiv.min.js"></script>
        <script src="~/Content/ace/js/respond.min.js"></script>
    <![endif]-->
    <link href="~/content/game/css/swiper.min.css" rel="stylesheet" />
    <link href="~/Content/action/font-awesome.min.css" rel="stylesheet" />
    <link href="~/Content/weui/weui.min.css" rel="stylesheet" />
    <link href="~/Content/weui/weui-tron.css" rel="stylesheet" />
    <style>
        i {
            color: #888;
        }

        .messagediv {
            /*margin-top:.5em;*/
            margin-bottom: .5em;
            padding: 0 15px;
            color: red;
            height: 20px;
        }
    </style>
    @RenderSection("styles", required: false)

    <script src="~/scripts/jquery-2.1.4.js"></script>
    @*<script src="~/scripts/swiper.min.js"></script>*@
    <script src="~/Scripts/jquery.form.js"></script>
    <script src="~/Scripts/moment-with-locales.js"></script>
    <script src="~/Scripts/layer/layer-mobile.js"></script>
</head>

<body class="no-skin pos-rel coming-soon" id="mainContent">
    @RenderBody()

    <!-- basic scripts -->
    <!--[if !IE]>
    -->

    <script src="~/Content/ace/js/jquery.min.js"></script>


    <!-- <![endif]-->
    <!--[if IE]>
    <script src="~/Content/ace/js/jquery1x.min.js"></script>
    <![endif]-->
    <script src="~/Content/ace/js/bootstrap.min.js"></script>

    <script>
        $(function () {
        $("#mainContent").height($(window).height() - $('.weui_tabbar').outerHeight());
    });
        var index=0;

    function JsSumbit() {
        var options = {
            method: 'post',
            data: $('.registerForm:visible').serialize(),
            url: "/Activity/Register"
        };
        $.ajax(options).success(function (data) {
            if (data == "ok"||data == "ishave") {
                mobilelayer.close(index);
				$("a[data-content='register-in']").attr('data-content','register-finish').children('p').text('已报名');
                $('#toast').show();
                setTimeout(function () {
                    $('#toast').hide();
                }, 2000);

            }
            else if (data == "notnull") {
                $(".messagediv:visible").html("姓名/电话不能为空！");
            }  else if (data == "notin") {
                $(".messagediv:visible").html("错误的姓名/电话！");
            }
        }).fail(function (jqXHR, status, error) {
            console.log(error);
        });
    }

    $('body').on('click', '.weui_tabbar_item', function () {
        var atr=$(this).attr('data-content');
        //点击已报名按钮
        if(atr=='register-finish'){
            var mask = $('#mask');
            var weuiActionsheet = $('#weui_actionsheet');
            weuiActionsheet.addClass('weui_actionsheet_toggle');
            mask.show()
                .focus()//加focus是为了触发一次页面的重排(reflow or layout thrashing),使mask的transition动画得以正常触发
                .addClass('weui_fade_toggle').one('click', function () {
                    hideActionSheet(weuiActionsheet, mask);
                });

            $('#actionsheet_cancelRegister').one('click', function () {
                hideActionSheet(weuiActionsheet, mask);
                $("#dialog1").show();
                $('#dialog1 .cancel').on('click', function () {
                    $('#dialog1').hide();
                });
                $('#dialog1 .confirm').on('click', function () {
                    $('#dialog1').hide();
                    var options = {
                        method: 'get',
                        data: {id:@Model.Id},
                        url:'/Activity/CancelRegister'
                    };
                    $.ajax(options).success(function (data) {
                        if(data=='ok'){
                            $("a[data-content='register-finish']").children('p').text('我要报名');
							var isRegisterIn='@flow.IsRegisterInCurrPage';
                            if(isRegisterIn=='True')
                                $("a[data-content='register-finish']").attr('data-content', 'register-in');
                            else  $("a[data-content='register-finish']").attr('data-content', 'register-out');
                        }
                    });
                });
            });
            $('#actionsheet_cancel').one('click', function () {
                hideActionSheet(weuiActionsheet, mask);
            });
            mask.unbind('transitionend').unbind('webkitTransitionEnd');

            function hideActionSheet(weuiActionsheet, mask) {
                weuiActionsheet.removeClass('weui_actionsheet_toggle');
                mask.removeClass('weui_fade_toggle');
                mask.on('transitionend', function () {
                    mask.hide();
                }).on('webkitTransitionEnd', function () {
                    mask.hide();
                })
            }
        }else if(atr=='register-in'){
            index=mobilelayer.open({
                type: 1,
                content: $('#divform').html(),
                anim: 0,
                style: 'position:fixed;bottom:0;left:0;width:100%;height:250px;padding:10px 0;border:none'
            });
        }else if(atr=='register-out'){
            location.href='@Html.Raw(Url.Action("Transfer", "activity", new { activityId =Model.ActivityID, flowType = (int)Sensing.Entities.Weixin.FlowType.Register}))';
        }else if(atr=='introduce')
        {
            location.href='@Html.Raw(Url.Action("Transfer", "activity", new { activityId =Model.ActivityID, flowType = (int)Sensing.Entities.Weixin.FlowType.Introduction}))';
        }
        else if(atr=='game'){
            location.href='@Html.Raw(Url.Action("Game", "playing",new { activityGameId = Model.ActivityGameId,openid=Model.WeixinUserInfo.Openid}))';
        }
        else{
            var type;
            //这边还需要改动
            if(atr=="gameResult"){
                type=@Convert.ToInt32(Sensing.Entities.Weixin.FlowType.GameResult).ToString();
            }else if(atr=="reward"){
                type=@Convert.ToInt32(Sensing.Entities.Weixin.FlowType.Reward).ToString();
            }@*else if(atr=="vote"){
                type=@Convert.ToInt32(Sensing.Entities.Weixin.FlowType.Vote).ToString();
            }*@
            location.href="/weixin/Public?openid="+"@Model.WeixinUserInfo.Openid"+"&appid="+"@Model.WeixinUserInfo.WeixinAppID"+"&activityId="+"@Model.ActivityID"+"&flowType="+type;
        }
    });


    </script>
    <script>
        $.ajaxSetup({
            cache: false //关闭AJAX缓存
        });
    </script>
    <script src="http://res.wx.qq.com/open/js/jweixin-1.0.0.js"></script>
    <script>
        wx.config({
            debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
            appId: '@weChatJSInfo.AppId', // 必填，公众号的唯一标识
            timestamp: @weChatJSInfo.Timestamp, // 必填，生成签名的时间戳
            nonceStr:'@weChatJSInfo.NonceStr', // 必填，生成签名的随机串
            signature: '@weChatJSInfo.Signature',// 必填，签名，见附录1
            jsApiList: [
            'onMenuShareTimeline',
            'onMenuShareAppMessage',
            'onMenuShareQQ',
            'onMenuShareWeibo',
            'hideMenuItems',
            'hideAllNonBaseMenuItem',
            'showMenuItems'
            ] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2
        });
       

        

        wx.ready(function(){
            var link=location.href.split("#")[0];
            if(link.indexOf('openid=')>0){
                var bfLink=link.substring(0,link.indexOf('openid=')+7);
                var afLink=link.substring(link.indexOf('openid=')+7);
                if(afLink.indexOf('&')>=0) afLink=afLink.substring(afLink.indexOf('&'));
                link=bfLink+afLink;
            }
            link.replace('isShared=false','isShared=true');
            // config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。
            wx.checkJsApi({
                jsApiList: [
                  'onMenuShareTimeline'
                  ,'onMenuShareAppMessage'
                  ,'onMenuShareQQ'
                   ,'onMenuShareWeibo'
                ],
                success: function (res) {
                    //alert(JSON.stringify(res));
                }
            });

            // 2.1 监听“分享给朋友”，按钮点击、自定义分享内容及分享结果接口

            wx.onMenuShareAppMessage({
                title: '@Model.Activity.ActivityShare.Title',
                desc: '@Model.Activity.ActivityShare.Description',
                link:link,
                imgUrl: '@GetShareImage()',
                type:'link',

                //trigger: function (res) {
                //    alert('用户点击发送给朋友');
                //},
                success: function (res) {
                    //分享给朋友 1
                    //分享到朋友圈 2
                    //分享到QQ 3
                    //分享到微博 4
                    //分享到QQ空间 5
                    doShareAppMessage(1);
                },
                cancel: function (res) {
                    //alert('已取消');
                },
                fail: function (res) {
                    alert(JSON.stringify(res));
                }
            });


            // 2.2 监听“分享到朋友圈”按钮点击、自定义分享内容及分享结果接口

            wx.onMenuShareTimeline({
                title: '@Model.Activity.ActivityShare.Title',
                link:link,
                imgUrl: '@GetShareImage()',
                trigger: function (res) {
                    //alert('用户点击分享到朋友圈');
                },
                success: function (res) {
                    //分享给朋友 1
                    //分享到朋友圈 2
                    //分享到QQ 3
                    //分享到微博 4
                    //分享到QQ空间 5
                    doShareAppMessage(2);
                },
                cancel: function (res) {
                    //alert('已取消');
                },
                fail: function (res) {
                    alert(JSON.stringify(res));
                }
            });
        });



        wx.error(function(res){

        // config信息验证失败会执行error函数，如签名过期导致验证失败，具体错误信息可以打开config的debug模式查看，也可以在返回的res参数中查看，对于SPA可以在这里更新签名。
        //alert(JSON.stringify(res));
    });


        function doShareAppMessage(shareType)
    {
        var options = {
                url: '/weixin/UpdateShare',
                method: 'post',
                data: { id: @Model.ActivityID,shareType: shareType,fromOpenid:"@weChatJSInfo.CurrentOpenId",type:"@ConstConfig.ACTIVITY"}
    };


            $.ajax(options)
                .success(function (data1) {
        var shacount=parseInt($("#sharecountSpan").text());
        shacount = shacount+1;
                    $("#sharecountSpan").text(shacount);
    })
                .error(function (data1) {
    });
        }
    </script>
    @RenderSection("scripts", required: false)

</body>
@Html.Partial("_ActivityNavigation", Model)
</html>