
@{
	ViewBag.Title = "GiftBallon";
}

<!DOCTYPE html>
<html lang="en">
<head>
	<title>气球</title>
	<meta charset="utf-8">
	<meta itemprop="name" content="邀请函" />
	<meta itemprop="description" content="邀请函" />
	<meta itemprop="author" content="无锡创思感知有限公司" />
	<meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1,user-scalable=0" />



	<!-- Demo styles -->
	<style>
		html, body {
			width: 100%;
			height: 100%;
			overflow: hidden;
		}
	</style>
	<script src="~/Content/ace/js/jquery.min.js"></script>
	<script src="~/Scripts/CreateJs/_assets/libs/preloadjs-NEXT.min.js"></script>
	<script src="~/Scripts/CreateJs/_assets/libs/soundjs-NEXT.min.js"></script>
	<script src="~/Scripts/CreateJs/lib/easeljs-NEXT.combined.js"></script>
	<script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
	<script src="~/signalr/hubs"></script>
	<script src="~/Scripts/jquery.qrcode.min.js"></script>
	<!-- <script type="text/javascript" src="ballon.js"></script> -->
	<script type="text/javascript">
	var SUB_IMAGE_COUNT=3;
	var DIFFICULTY = 2;		//how fast the game gets mor difficult
	var ROCK_TIME = 110;
	var width=1920,height=1080;
	var sparkerContainer,heartContainer;
	var canvas;			//Main canvas
	var stage;	//Main display stage
	var timeToRock;
	var image1,image2,image3;
	var nextballon=0;
	var giftballon=[];
	var colors = ["#c13","#0a0","#489","#000","#ea0"];
	var cursorList = {};

	var shootSetting={
		targetNum:10,
		targetVal:2,
		speed:700
	};
	function init()
	{
		canvas = document.getElementById("myCanvas");
		canvas.width=width;
		canvas.height=height;
		stage = new createjs.Stage(canvas);
		///把要加载的图片放一起
		var manifest=[
			{src: "@Url.Content("~/Content/game/OnLineGame/GiftBallon/b1.png")", id: "image1" },
			{src:"@Url.Content("~/Content/game/OnLineGame/GiftBallon/b2.png")" , id:"image2"},
			{src:"@Url.Content("~/Content/game/OnLineGame/GiftBallon/b3.png")" , id:"image3"}
		];
		loader = new createjs.LoadQueue(false);
		loader.addEventListener("complete" , handleComplete);
		loader.loadManifest(manifest);


		timeToRock=ROCK_TIME;

		sparkleContainer = new createjs.Container();
		stage.addChild(sparkleContainer );

		heartContainer=new createjs.Container();
		stage.addChild(heartContainer);


		createjs.Ticker.timingMode = createjs.Ticker.RAF;
		if (!createjs.Ticker.hasEventListener("tick")) {
			createjs.Ticker.addEventListener("tick", tick);
		}

	}
	//图片加载完回调函数
	function handleComplete(event)
	{

		setInterval(function(){
				var gifImg;
		var index=Math.floor(Math.random()*4);
		if(index==0) index=1;
		switch(index){
			case 1:gifImg=loader.getResult("image1");var imgW = 86;var imgH=179;break;
			case 2:gifImg=loader.getResult("image2");var imgW = 72;var imgH=148;break;
			case 3:gifImg=loader.getResult("image3");var imgW = 95;var imgH=167;break;
		}
				if( heartContainer.numChildren < (parseInt(shootSetting.targetNum)) ){
					var heart = new createjs.Shape();
					var index = Math.random()*3  >> 0;

					heart.graphics.beginBitmapFill(gifImg).drawRect(index*imgW, 0, imgW, imgH);
					heart.y = -301;
					heartContainer.addChild(heart);
				}
			}, 500);
	}

	function tick(event)
	{
		var hl = heartContainer.numChildren;
		for (var i = 0; i < hl; i++) {
			var heart = heartContainer.getChildAt(i);
			if (heart.y < -300) {
				heart._x = Math.random() * width;
				heart.y = width * (1 + Math.random()) + 150;
				heart.perX = (1 + Math.random() * 2) * width;
				heart.offX = Math.random() * width;
				heart.ampX = heart.perX * 0.1 * (0.15 + Math.random());
				heart.velY = -Math.random() * 2 - 1;
				heart.scaleX = heart.scaleY = Math.random() * 0.5+ .8;
				heart._rotation = Math.random() * 40 - 20;
				heart.alpha = Math.random() * 0 + 1;
				heart.compositeOperation = Math.random() < 0.33 ? "lighter" : "source-over";
				heart.scores = ( shootSetting.targetVal * (-heart.velY) * (1.3-heart.scaleX) )>>0;
			}
			var int = (heart.offX + heart.y) / heart.perX * Math.PI * 2;
			//heart.y += heart.velY * heart.scaleX / 1;
			heart.y += heart.velY * heart.scaleX / ( shootSetting.speed /width );
			heart.x = heart._x + Math.cos(int) * heart.ampX;
			heart.rotation = heart._rotation + Math.sin(int) * 10;
		}


		// 准星平滑移动
		for (var id in cursorList) {
			var cursor = cursorList[id];
			var mycur = stage.getChildByName(id);
			if (mycur) {
				var dstX = cursor.tarX - cursor.preX;
				var dstY = cursor.tarY - cursor.preY;
				cursor.preX = cursor.preX + dstX * 0.07;
				cursor.preY = cursor.preY + dstY * 0.07;
				mycur.x = cursor.preX;
				mycur.y = cursor.preY;
			}
		}

		stage.update(event);
	}

	function createCursor(color,actionId){
	var cursor = new createjs.Shape(new createjs.Graphics()
								.setStrokeStyle(5, 'round', 'round')
								.beginStroke(color)
								.arc(0, 0, 20, Math.PI*.1,  Math.PI*.4)
								.beginStroke(color)
								.arc(0, 0, 20, Math.PI*.6,  Math.PI*.9)
								.beginStroke(color)
								.arc(0, 0, 20, Math.PI*1.1, Math.PI*1.4)
								.beginStroke(color)
								.arc(0, 0, 20, Math.PI*1.6, Math.PI*1.9) );
	cursor.alpha = .5;
	cursor.x = width/2;
	cursor.y = height / 2;
	cursor.name = actionId
	return cursor;
}

	$(function(){
		var chat = $.connection.gameControlHub;
		var player={
				RoomId:"@Guid.NewGuid()"
		};

		$.connection.hub.start().done(function () {
			//创建房间
			chat.server.createRoom(player, 6);
			//生成二维码
			var url = "/Hub/CreateQrCode";
			var options = {
				method: 'post',
				data: {
					ActivityId: 13,
					gameId:40,
					roomNo:player.RoomId
				}
			};
			$.ajax(url, options).success(function (result) {
				if (result.data.qrCodeUrl.indexOf('qq.com') > 0) {
					//微信二维码直接使用
					$('#divQrcode').append("<img style='width:100%;height:100%;' src='" + result.data.qrCodeUrl + "' />");
				} else {
					//自己的地址用jquery.qrcode.min.js生成
					$('#divQrcode').qrcode({
						render: "canvas", //table方式 
						width: 150, //宽度 
						height: 150, //高度 
						text: result.data.qrCodeUrl //任意内容 
					});
				}
				
			});
		});
		
		chat.client.NewPlayer = function (p) {
			var html = "<li id='"+p.ActionId+"'>" +
						'<span>' + p.OpenId + '</span>';
			'</li>';
			$('#playerlist').append(html);
			var color = colors.shift();
			colors.push(color);
			var newCursor=createCursor(color,p.ActionId);
			cursorList[newCursor.name] = {
				"openid": p.OpenId,
				"preX":width/2,
				"preY" : height/2, 
				"tarX" : width/2,
				"tarY" : height/2, 
				"fire" : "0", 
				"hit"  : 0, 
				"bit"  : 0,
				"score": 0,
				"color": color,
				"start": window.Date.now()
			};
			stage.addChild(newCursor);
		};

		chat.client.update = function (p, data) {
			//cursorList[p.ActionId]
			//var cur = stage.getChildByName(data.ActionId);

			var offset = data.Direction.X;
			offset = offset > 180 ? offset-360 : (offset < -180 ? offset+360 : offset);
			var elev = data.Direction.Y;

			var left = (width - offset*width*.5/18) >> 1;
			var top  = (height - elev*height*.5/18) >> 1;
			left = left < 15 ? 15 : left;
			left = left > width-15 ? width-15 : left;
			top  = top < 15 ? 15 : top;
			top  = top > height-15 ? height-15 : top;

			var cursor = cursorList[p.ActionId];
			if (cursor) {
				cursor.tarX = left;
				cursor.tarY = top;
				//if (cursor.fire == "1") {
				//    cursor.bit = cursor.bit + 1;
				//    fireAttack(cursor.preX, cursor.preY, cursor);
				//    cursor.fire == "0";
				//}
				//$("#" + "u_" + event.id).find(".hit").html(cursor.hit)
				//                   .end().find(".bit").html(cursor.bit);
				//// 设置倒计时
				//showCursorTime(cursor);            //cursor.fire = event["cur"].fire;

			}
		};

		chat.client.PlayerLeave = function (p) {
			var c = stage.getChildByName(p.ActionId);
			stage.removeChild(c);
			$('#playerlist').children('#'+p.ActionId).remove();
		}
	});

	  
	</script>
</head>
<body onload="init();">
	<div style="width:100%;height:100%;">
		<canvas id="myCanvas" style="width:100%;height:100%;"></canvas>
	</div>
	<ul style="position:absolute;left:0;top:0;padding:20px;" id="playerlist">
	</ul>
	<div style="position:absolute;bottom:0;right:0;padding:20px;width:150px;height:150px;" id="divQrcode"></div>
</body>
</html>